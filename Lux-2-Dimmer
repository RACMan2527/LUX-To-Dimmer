blueprint:
  name: Nav LUX Light Dimmer
  description: |
    Version 1.0
    Dim Navigation based on the value of a light sensor
  
  domain: automation
  input:

    light_sensor_entity:
      name: Light Sensor
      selector:
        entity:
          domain: sensor
          device_class: illuminance

    target_light:
      name: Target lights
      selector:
        target:
          entity:
            domain: light

mode: single

variables:
  light_sensor: !input light_sensor_entity
         t4: 0.0000000000000065 * light_sensor * crntlight_sensorLux * light_sensor * light_sensor
         t3: 0.00000000027 * light_sensor * light_sensor * light_sensor
         t2: 0.000004 * light_sensor * light_sensor
         t1: 0.0278 * light_sensor
         t0: 3.0
  

trigger:
  platform: state
  entity_id: !input light_sensor_entity

condition:
  - condition: numeric_state
    entity_id: !input light_sensor_entity
    above: !input min_brightness_value

  - condition: time
    after: !input schedule_start
    before: !input schedule_stop

  - condition: template
    value_template: "{{ now().strftime('%a') | lower in days }}"

action:
  - service: light.turn_on
    data:
      brightness_pct: >
        {% if states(light_sensor)|int > maxB %}
          1
        {% else %}
          {{ (( -t4 + t3 - t2 + t1 + t0 )|round }}
        {% endif %}

    target: !input target_light
